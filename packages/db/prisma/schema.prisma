generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  phoneNumber String   @unique
  balance     Int      @default(1000)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  orders      Order[]
  OTPs        OTP[]
  positions   Position[]
}

model Order {
  id          String      @id
  entryPrice  Float
  quantity    Float
  leverage    Int
  executedQty Float?
  createdAt   DateTime    @default(now())
  user        User        @relation(references: [id], fields: [userId])
  userId      String
  status      OrderStatus @default(PENDING)
  trades      Trade[]
  side        TradeSide
}

model Position {
  id              String     @id @default(cuid())
  market          String     // e.g. "BTCUSDT"
  side            TradeSide
  quantity        Decimal    @db.Decimal(40, 8)
  entryPrice      Decimal    @db.Decimal(40, 8)
  margin          Decimal    @db.Decimal(40, 8)
  unrealizedPnl   Decimal?   @db.Decimal(40, 8)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  user            User       @relation(fields: [userId], references: [id])
  userId          String
}

model Trade {
  id          String    @id @default(cuid())
  orderId     String
  order       Order     @relation(references: [id], fields: [orderId])
  otherUserId String
  quantity    Int
  price       Float
  side        TradeSide
}

model OTP {
  id          String   @id @default(cuid())
  code        String
  phoneNumber String
  isVerified  Boolean  @default(false)
  expiresAt   DateTime
  user        User?    @relation(fields: [userId], references: [id])
  userId      String?
  createdAt   DateTime @default(now())
}

model Depth {
  id           String   @id @default(cuid())
  bids         Json
  asks         Json
  currentPrice Int
  createdAt    DateTime @default(now())
}

enum TradeSide {
  LONG
  SHORT
}

enum OrderStatus {
  PENDING
  FILLED
  PARTIALLY_FILLED
  CANCELLED
}

